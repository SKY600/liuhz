(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(e,t,a){"use strict";a.r(t);var s=a(14),l=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"一、什么是flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是flex"}},[e._v("#")]),e._v(" 一、什么是flex?")]),e._v(" "),a("p",[e._v("官方说法：Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。")]),e._v(" "),a("p",[e._v("民间说法：flex 就是一种布局方式，类似于 block，inline-block等。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("1. 弹性布局（flex-layout）是一套css3新增的自适应布局模式，用于替代传统的div+css布局或辅助\n2. 弹性布局主要是为了让盒子里面的子元素在面对容器不同宽度时都能够很好的适应。\n")])])]),a("h1",{attrs:{id:"二、基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、基本使用"}},[e._v("#")]),e._v(" 二、基本使用")]),e._v(" "),a("ol",[a("li",[e._v("开启 flex 弹性布局 display: flex/inline-flex")]),e._v(" "),a("li",[e._v("设置子元素方向 flex-direction")]),e._v(" "),a("li",[e._v("子元素是否可换行 flex-wrap")]),e._v(" "),a("li",[e._v("子元素居中对齐\n"),a("blockquote",[a("p",[e._v("主轴居中：justify-content: center;\n侧轴居中：align-item: center;")])])]),e._v(" "),a("li",[e._v("子元素如何处理间隔\n"),a("blockquote",[a("p",[e._v("间隔均分：justify-content 及 align-items\n消化多余的空间（弹性空间):flex-grow")])])]),e._v(" "),a("li",[e._v("子元素高度如何占满父容器高度 align-items")]),e._v(" "),a("li",[e._v("子元素如何完成自适应\n"),a("blockquote",[a("p",[e._v("开启弹性容器\n处理多余空间")])])]),e._v(" "),a("li",[e._v("设置单个弹性项目的对齐 align-self")]),e._v(" "),a("li",[e._v("改变弹性项目的显示顺序 order")]),e._v(" "),a("li",[e._v("设置弹性项目的默认宽度 flex-basis")]),e._v(" "),a("li",[e._v("如果弹性容器的宽度容不下弹性项目的预期总宽度\n"),a("blockquote",[a("p",[e._v("弹性容器会按照每个弹性项目的flex-shrink（默认1）的值来确定每个弹性项目要减少的的宽度")])])])]),e._v(" "),a("h1",{attrs:{id:"三、弹性布局相关css属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、弹性布局相关css属性"}},[e._v("#")]),e._v(" 三、弹性布局相关CSS属性")]),e._v(" "),a("h2",{attrs:{id:"_1-给父元素设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-给父元素设置"}},[e._v("#")]),e._v(" 1. 给父元素设置")]),e._v(" "),a("h4",{attrs:{id:"display-flex-inline-flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-flex-inline-flex"}},[e._v("#")]),e._v(" display:flex/inline-flex")]),e._v(" "),a("blockquote",[a("p",[e._v("给容器设置css属性display:flex/inline-flex将该盒子变为一个弹性容器，它里面的子元素会以弹性布局的方式来处理。")])]),e._v(" "),a("ol",[a("li",[e._v("display:flex; 会将盒子变为块级的弹性容器。对其他兄弟标签来说，就是一个普通的块级标签，对里面子元素来说，该盒子就是他们的弹性容器。")]),e._v(" "),a("li",[e._v("display:inline-flex; 会将盒子变为行内的弹性容器。对其他兄弟标签来说，就是一个普通的行内标签，对里面子元素来说，该盒子就是他们的弹性容器。")])]),e._v(" "),a("blockquote",[a("p",[e._v("特点:")]),e._v(" "),a("ol",[a("li",[e._v("弹性容器只对自己的直接子元素有效 "),a("br")]),e._v(" "),a("li",[e._v("display:inline-flex和flex对自己的兄弟标签来说没有任何影响 "),a("br")]),e._v(" "),a("li",[e._v("对于弹性容器来说，高度是自适应的，无需设置高度 "),a("br")])])]),e._v(" "),a("h4",{attrs:{id:"flex-direction-设置子元素的排列方式-同时确定弹性容器的主轴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction-设置子元素的排列方式-同时确定弹性容器的主轴"}},[e._v("#")]),e._v(" flex-direction：设置子元素的排列方式，同时确定弹性容器的主轴")]),e._v(" "),a("p",[e._v("通过flex-direction设置的方向为主轴，与之垂直的方向为侧轴。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("row：默认\nrow-reverse\ncolumn：垂直排列\ncolumn-reverse\n")])])]),a("h4",{attrs:{id:"flex-wrap-设置弹性项目是否换行显示-默认不换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap-设置弹性项目是否换行显示-默认不换行"}},[e._v("#")]),e._v(" flex-wrap：设置弹性项目是否换行显示，默认不换行")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("nowrap：默认，不换行。\nwrap：换行显示。\n")])])]),a("blockquote",[a("p",[e._v("特点：设置换行之后，弹性项目的尺寸不会发生自适应变化")])]),e._v(" "),a("h4",{attrs:{id:"justify-content、align-items-处理富裕空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#justify-content、align-items-处理富裕空间"}},[e._v("#")]),e._v(" justify-content、align-items：处理富裕空间")]),e._v(" "),a("p",[e._v("justify-content：处理主轴上的富裕空间；align-items：处理侧轴上的富裕空间；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("flex-start：默认。弹性项目跟主轴左部/顶部对齐\nflex-end：弹性项目跟主轴右部/底部对齐\nspace-between：弹性项目之间的空间均匀分配\nspace-around：每个弹性项目两侧的距离是一样的\nspace-evently：每个弹性项目之间的空隙完全一样，包含第一个和最后一个弹性项目\ncenter：让弹性项目居中显示\nstretch：当弹性项目没设置高度时，那么弹性项目的高度跟弹性容器一致（侧轴）\nalign-items：处理侧轴上的富裕空间\n")])])]),a("h2",{attrs:{id:"_2-给子元素设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-给子元素设置"}},[e._v("#")]),e._v(" 2. 给子元素设置")]),e._v(" "),a("h4",{attrs:{id:"flew-grow-设置弹性项目的弹性因子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flew-grow-设置弹性项目的弹性因子"}},[e._v("#")]),e._v(" flew-grow：设置弹性项目的弹性因子")]),e._v(" "),a("p",[e._v("需要一个数字，默认为1")]),e._v(" "),a("blockquote",[a("p",[e._v("原理：弹性容器会将多余的富裕空间按照设置的弹性因子分成等量的几份分给弹性项目消化，弹性因子大的弹性项目得到的多余空间要多一些。")])]),e._v(" "),a("h4",{attrs:{id:"align-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[e._v("#")]),e._v(" align-self：")]),e._v(" "),a("p",[e._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n")])])]),a("h4",{attrs:{id:"flex-basis-设置弹性项目的默认宽度-其优先级大于用户设定的width"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis-设置弹性项目的默认宽度-其优先级大于用户设定的width"}},[e._v("#")]),e._v(" flex-basis：设置弹性项目的默认宽度，其优先级大于用户设定的width")]),e._v(" "),a("p",[e._v("flex-basis:300px;")]),e._v(" "),a("blockquote",[a("p",[e._v("宽度优先级：flex-basis > width > 宽度由内容确定")])]),e._v(" "),a("h4",{attrs:{id:"flew-shrink-设置当弹性容器宽度不够时-弹性项目的收缩因子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flew-shrink-设置当弹性容器宽度不够时-弹性项目的收缩因子"}},[e._v("#")]),e._v(" flew-shrink：设置当弹性容器宽度不够时，弹性项目的收缩因子")]),e._v(" "),a("p",[e._v("弹性容器会按照每个弹性项目的flex-shrink（默认1）的值来确定每个弹性项目要减少的的宽度")]),e._v(" "),a("blockquote",[a("p",[e._v("原理：当弹性容器宽度容不下当前该行的所有弹性项目，就会依照flex-shrink来收缩弹性项目已达到不换行的目的。flex-shrink会按照设定的值将需要收缩的宽度等量划分，减少弹性项目对应的尺寸。")])]),e._v(" "),a("h4",{attrs:{id:"order-能够改变某个弹性项目的显示位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-能够改变某个弹性项目的显示位置"}},[e._v("#")]),e._v(" order：能够改变某个弹性项目的显示位置")]),e._v(" "),a("p",[e._v("order:数字; 数字默认为1")]),e._v(" "),a("blockquote",[a("p",[e._v("数字越大，显示的位置越靠后。数字越小，位置越靠前。不能为负")])]),e._v(" "),a("h1",{attrs:{id:"四、名词解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、名词解释"}},[e._v("#")]),e._v(" 四、名词解释")]),e._v(" "),a("h5",{attrs:{id:"富裕空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#富裕空间"}},[e._v("#")]),e._v(" 富裕空间")]),e._v(" "),a("p",[e._v("概念：富裕空间是指一行除了弹性项目外多余的空间\n处理：justify-content: 处理主轴上的富裕空间，align-items: 处理侧轴上的富裕空间")]),e._v(" "),a("h5",{attrs:{id:"弹性空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性空间"}},[e._v("#")]),e._v(" 弹性空间")]),e._v(" "),a("p",[e._v("概念：让弹性项目消化富裕空间，将富裕空间变成弹性项目的一部分。即弹性容器的尺寸变化会影响弹性项目的尺寸。\n原理：给子元素（弹性项目）设置flew-grow(俗称弹性因子）来瓜分富裕空间。\n注意：如果说弹性项目太小，我们可以给弹性项目设置min-width")]),e._v(" "),a("h1",{attrs:{id:"五、弹性布局兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、弹性布局兼容性"}},[e._v("#")]),e._v(" 五、弹性布局兼容性")]),e._v(" "),a("p",[e._v("概念：弹性布局兼容ie10+，ie9或8不支持，如果ie89想达到一样的效果，需使用响应式布局来实现。")]),e._v(" "),a("h1",{attrs:{id:"六、弹性容器的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、弹性容器的应用场景"}},[e._v("#")]),e._v(" 六、弹性容器的应用场景")]),e._v(" "),a("p",[e._v("带有重复性的盒子规正放置的盒子列表。\n需要自适应的部分")])])}),[],!1,null,null,null);t.default=l.exports}}]);